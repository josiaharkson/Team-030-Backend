{"version":3,"sources":["pages/components/MarketComponent/GridList.js","utils/useRequest.js"],"names":["KEYS","config","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","tile","icon","color","marginRight","borderColor","flex","flexDirection","alignItems","fontSize","textAlign","breakpoints","down","btn","margin","marginBottom","prodDetails","grid","marginTop","items_style","fontFamily","items_style_farm","whiteSpace","textOverflow","padding","paddingLeft","paddingBottom","TitlebarGridList","props","classes","data","console","log","className","length","container","spacing","style","map","item","SingleProductBox","key","Math","random","pic","React","useState","imgData","setImgData","url","API_URL","_id","url2","farm","useRequest","error","isValidating","useEffect","base64Image","Buffer","from","toString","imgSrcString","contentType","src","alt","textTransform","name","variant","size","response","quantity","sold","request","initialData","useSWR","JSON","stringify","axios","status","statusText","headers","revalidate","mutate","useMemo"],"mappings":"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","file":"static/js/22.059a809a.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport useRequest from \"../../../utils/useRequest\";\n\nimport config from \"../../../utils/config\";\nimport \"./singleProductStyle.css\";\n\nconst KEYS = config();\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: \"100%\",\n    height: 600,\n  },\n  tile: {\n    width: 10,\n  },\n  icon: {\n    color: \"rgba(255, 255, 255, 0.54)\",\n    marginRight: 5,\n    borderColor: \"rgba(255, 255, 255, 0.54)\",\n  },\n  paper: {\n    width: \"100%\",\n    height: 140,\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    fontSize: 14,\n    textAlign: \"center\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 9,\n    },\n  },\n  btn: {\n    height: 27,\n    margin: \"3px 5px\",\n    fontSize: 9,\n    marginBottom: 10,\n  },\n\n  prodDetails: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    color: \"black\",\n    fontSize: 12,\n    margin: \"10px 5px\",\n    textAlign: \"center\",\n  },\n\n  grid: {\n    marginTop: 20,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 10,\n    },\n  },\n\n  items_style: {\n    fontSize: 12,\n    fontFamily: \"monospace\",\n    color: \"green\",\n\n    \"&>b\": {\n      color: \"#b31d1d\",\n      fontFamily: \"inherit\",\n    },\n  },\n\n  items_style_farm: {\n    fontSize: 12,\n    fontFamily: \"monospace\",\n    whiteSpace: \"nowrap\",\n    width: \"100%\",\n    overflow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    color: \"gray\",\n    padding: \"0px 5px\",\n    paddingLeft: 15,\n    paddingBottom: 15,\n    marginTop: -10,\n    textAlign: \"left\",\n  },\n}));\n\nexport default function TitlebarGridList(props) {\n  const classes = useStyles();\n  const { data } = props;\n\n  console.log(data);\n  return (\n    <div className={classes.root}>\n      {!data.length ? (\n        <div>No Product Has Been Added To The Database</div>\n      ) : (\n        <Grid container spacing={3} style={{ padding: 20 }}>\n          {data.map(item => (\n            <SingleProductBox item={item} key={Math.random()} />\n          ))}\n        </Grid>\n      )}\n    </div>\n  );\n}\n\nconst SingleProductBox = ({ item }) => {\n  const classes = useStyles();\n\n  const { pic } = item;\n  const [imgData, setImgData] = React.useState(\"/img/singleProductDefault.jpg\");\n\n  const url = KEYS.API_URL + \"/api/product/stats/\" + item._id;\n  const url2 = KEYS.API_URL + \"/api/farm/get/\" + item.farm;\n\n  const { data, error, isValidating } = useRequest({\n    url,\n  });\n  const { data: farm } = useRequest({\n    url: url2,\n  });\n\n  React.useEffect(() => {\n    if (pic) {\n      //convert image file to base64-encoded string\n      let base64Image = Buffer.from(pic.data, \"binary\").toString(\"base64\");\n\n      //combine all strings\n      let imgSrcString = `data:${pic.contentType};base64,${base64Image}`;\n      setImgData(imgSrcString);\n    }\n  }, [pic]);\n\n  return (\n    <div className=\"responsive\">\n      <div className=\"gallery\">\n        <img src={imgData} alt=\"Cinque Terre\" width=\"600\" height=\"400\" />\n        <div className=\"desc\">\n          <div>\n            <Typography\n              style={{\n                textTransform: \"capitalize\",\n                whiteSpace: \"nowrap\",\n                width: \"100%\",\n                overflow: \"hidden\",\n                fontSize: 12,\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {item.name}\n            </Typography>\n\n            <Button\n              className={classes.btn}\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n            >\n              open product\n            </Button>\n          </div>\n\n          <div className={classes.prodDetails}>\n            {error ? (\n              <>GET error!</>\n            ) : (\n              <>\n                {isValidating ? (\n                  <CircularProgress size={20} />\n                ) : (\n                  <>\n                    {data ? (\n                      <>\n                        <Typography className={classes.items_style}>\n                          <b>Quantity</b>: {data.response.quantity}\n                        </Typography>\n                        <Typography className={classes.items_style}>\n                          <b>Price</b>: {data.response.sold}\n                        </Typography>\n                      </>\n                    ) : null}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n        {farm && farm.response && farm.response.name && (\n          <Typography className={classes.items_style_farm}>\n            Available @ {farm.response.name}dddddddddddddddddddddddddddddd\n          </Typography>\n        )}\n      </div>\n    </div>\n  );\n};\n","import useSWR from \"swr\";\nimport axios from \"axios\";\nimport { useMemo } from \"react\";\n\nexport default function useRequest(request, { initialData, ...config } = {}) {\n  const { data: response, error, isValidating, revalidate, mutate } = useSWR(\n    request && JSON.stringify(request),\n    () => axios(request || {}),\n    {\n      ...config,\n      initialData: initialData && {\n        status: 200,\n        statusText: \"InitialData\",\n        headers: initialData.headers ? { ...initialData.headers } : {},\n        data: initialData,\n      },\n    }\n  );\n\n  return useMemo(\n    () => ({\n      data: response && response.data,\n      response,\n      error,\n      isValidating,\n      revalidate,\n      mutate,\n    }),\n    [response, error, isValidating, revalidate, mutate]\n  );\n}\n"],"sourceRoot":""}