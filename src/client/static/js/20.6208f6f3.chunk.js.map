{"version":3,"sources":["pages/components/DashboardComponent/farmers.components/SingleFarm.js","utils/useRequest.js","components/SnackBar.js"],"names":["KEYS","config","useStyles","makeStyles","theme","appBar","position","color","background","title","marginLeft","spacing","flex","content","breakpoints","down","fontSize","body","marginTop","bodyContent","padding","btn","height","margin","marginBottom","message","textAlign","margimBottom","span","paper","width","display","flexDirection","alignItems","justifyContent","prodDetails","bodyImg","zIndex","backgroundRepeat","backgroundSize","backgroundPosition","boxShadow","items_style","fontFamily","my_btns","Transition","React","forwardRef","props","ref","direction","FullScreenDialog","farmId","farmName","farmPic","handleClose","token","classes","useState","imgData","setImgData","url","API_URL","useRequest","headers","authHeader","data","error","isValidating","mutate","msg","setMsg","msgType","setMsgType","SnackBarOpen","setSnackBarOpen","open","setOpen","useEffect","base64Image","Buffer","from","toString","imgSrcString","contentType","autoHideDuration","type","fullScreen","onClose","TransitionComponent","className","edge","onClick","aria-label","variant","toUpperCase","autoFocus","style","backgroundImage","badgeContent","response","length","DisplayData","AddNewProductDialog","refresh","container","map","product","SingleProductBox","key","Math","random","name","deleteFarm","id","_id","console","log","setName","quantity","setQuantity","sold","setSold","file","setFile","createNewProduct","a","trim","formData","FormData","append","JSON","stringify","farm","axios","post","aria-labelledby","label","fullWidth","value","onChange","e","target","files","alert","onChangeFile","inputProps","accept","endadornment","pic","src","alt","textTransform","whiteSpace","overflow","textOverflow","size","request","initialData","useSWR","status","statusText","revalidate","useMemo","close","Alert","elevation","SimpleSnackbar","anchorOrigin","vertical","horizontal","ContentProps","action","severity"],"mappings":"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","file":"static/js/20.6208f6f3.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport useRequest from \"../../../../utils/useRequest\";\nimport authHeader from \"../../../../utils/auth-header\";\nimport { InlineLoader } from \"../../../../components/IsLoading\";\nimport SnackBar from \"../../../../components/SnackBar\";\n\nimport config from \"../../../../utils/config\";\nimport \"./singleProductStyle.css\";\n\nconst KEYS = config();\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    color: \"#FFF\",\n    background: \"rgba(18, 107, 22, 0.88)\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n    \"&::before\": {\n      content: '\"My Farm - \"',\n    },\n\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 13,\n      marginLeft: 5,\n      \"&::before\": {\n        content: '\"\"',\n      },\n    },\n  },\n  body: {\n    marginTop: -20,\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: -30,\n    },\n  },\n  bodyContent: {\n    padding: theme.spacing(2, 6),\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2),\n    },\n  },\n  btn: {\n    height: 27,\n    margin: \"3px 5px\",\n    fontSize: 9,\n    marginBottom: 10,\n  },\n  message: { fontSize: 30, textAlign: \"center\", margimBottom: 30 },\n  span: { color: \"gray\", textAlign: \"left\", fontSize: 14 },\n  paper: {\n    width: \"100%\",\n    height: 140,\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    fontSize: 14,\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: 9,\n    },\n    textAlign: \"center\",\n  },\n  prodDetails: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    color: \"gray\",\n    fontSize: 12,\n    margin: \"10px 5px\",\n    textAlign: \"center\",\n  },\n  bodyImg: {\n    // backgroundPosition: \"right bottom, left top\",\n    zIndex: 10,\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n    width: \"100%\",\n    height: 400,\n    backgroundPosition: \"center\",\n    // filter: \"blur(1px)\",\n    boxShadow:\n      \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: 270,\n    },\n  },\n\n  items_style: {\n    fontSize: 12,\n    fontFamily: \"monospace\",\n    color: \"green\",\n\n    \"&>b\": {\n      color: \"#b31d1d\",\n      fontFamily: \"inherit\",\n    },\n  },\n\n  my_btns: {\n    display: \"flex\",\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog({\n  farmId,\n  farmName,\n  farmPic,\n  handleClose,\n  token,\n}) {\n  const classes = useStyles();\n  const [imgData, setImgData] = React.useState(\"/img/defaultSingleFarm2.jpg\");\n\n  // GET All products for this farm\n  const url = KEYS.API_URL + \"/api/product/\" + farmId;\n\n  const { data, error, isValidating, mutate } = useRequest({\n    url,\n    headers: authHeader(token),\n  });\n\n  const refresh = () => {\n    mutate();\n  };\n\n  // SnackBar Props\n  const [msg, setMsg] = React.useState(\"\");\n  const [msgType, setMsgType] = React.useState(\"success\");\n  const [SnackBarOpen, setSnackBarOpen] = React.useState(false);\n\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpenDialog = () => {\n    setOpen(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(() => {\n    if (farmPic) {\n      //convert image file to base64-encoded string\n      let base64Image = Buffer.from(farmPic.data, \"binary\").toString(\"base64\");\n\n      //combine all strings\n      let imgSrcString = `data:${farmPic.contentType};base64,${base64Image}`;\n      setImgData(imgSrcString);\n    }\n  }, [farmPic]);\n\n  return (\n    <div>\n      {SnackBarOpen && (\n        <SnackBar\n          autoHideDuration={10000}\n          message={msg}\n          handleClose={() => setSnackBarOpen(false)}\n          type={msgType}\n        />\n      )}\n\n      <Dialog\n        fullScreen\n        open={true}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={handleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              {farmName.toUpperCase()}\n            </Typography>\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\n              CLose\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.body}>\n          <div\n            style={{ backgroundImage: `url(\"${imgData}\")` }}\n            className={classes.bodyImg}\n          />\n          <div className={classes.bodyContent}>\n            <h2>\n              All Products for this farm\n              <Badge\n                badgeContent={data ? data.response.length : \"0\"}\n                color=\"secondary\"\n                style={{ margin: \"0 15px\" }}\n              />\n            </h2>\n            <Button\n              color=\"inherit\"\n              variant=\"outlined\"\n              onClick={handleClickOpenDialog}\n            >\n              Add A new Product\n            </Button>\n\n            <DisplayData\n              data={data}\n              error={error}\n              isValidating={isValidating}\n            />\n            {open && (\n              <AddNewProductDialog\n                open={open}\n                farmId={farmId}\n                token={token}\n                handleClose={handleCloseDialog}\n                refresh={refresh}\n                setMsg={setMsg}\n                setMsgType={setMsgType}\n                setSnackBarOpen={setSnackBarOpen}\n              />\n            )}\n          </div>\n        </div>\n      </Dialog>\n    </div>\n  );\n}\n\nconst DisplayData = ({ data, error, isValidating }) => {\n  const classes = useStyles();\n\n  const deleteFarm = id => console.log({ id });\n\n  if (isValidating) return <InlineLoader />;\n  if (error) return <div>An Error Occured!</div>;\n  if (data) {\n    if (data.response) {\n      if (!data.response.length) {\n        return (\n          <div className={classes.message} style={{ margin: 30 }}>\n            You have not added any Product yet under this farm!\n          </div>\n        );\n      } else {\n        return (\n          <>\n            <div className={classes.message}>\n              <span className={classes.span}>\n                Click on an item to open product\n              </span>\n            </div>\n            <Grid container spacing={2}>\n              {data.response.map(product => (\n                <SingleProductBox\n                  key={Math.random() + product.name}\n                  product={product}\n                  deleteFarm={() => deleteFarm(product._id)}\n                />\n              ))}\n            </Grid>\n          </>\n        );\n      }\n    }\n  } else {\n    return <InlineLoader />;\n  }\n\n  return <InlineLoader />;\n};\n\nconst AddNewProductDialog = ({\n  open,\n  handleClose,\n  farmId,\n  refresh,\n  token,\n  setMsg,\n  setMsgType,\n  setSnackBarOpen,\n}) => {\n  const [name, setName] = React.useState(\"\");\n  const [quantity, setQuantity] = React.useState(\"\");\n  const [sold, setSold] = React.useState(\"\");\n\n  const [file, setFile] = React.useState(null);\n\n  const onChangeFile = e => {\n    if (e.target.files[0]) {\n      const type = e.target.files[0].type;\n      if (type !== \"image/png\" && type !== \"image/jpeg\" && type !== \"image/jpg\")\n        return alert(\"Invalid Image file sected!\");\n      setFile(e.target.files[0]);\n    }\n  };\n\n  const createNewProduct = async () => {\n    if (!name.trim()) {\n      console.log(443344);\n      setMsg(\"Form not Completed\");\n      setMsgType(\"error\");\n      setSnackBarOpen(true);\n\n      return;\n    }\n\n    const url = KEYS.API_URL + \"/api/product/add/\" + farmId;\n\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    formData.append(\n      \"data\",\n      JSON.stringify({\n        name,\n        farm: farmId,\n        quantity,\n        sold,\n      })\n    );\n\n    try {\n      await axios.post(url, formData, {\n        headers: authHeader(token),\n        \"Content-Type\": \"multipart/form-data\",\n      });\n      refresh();\n      handleClose();\n      setMsg(\"New Product Has been Created Successfully!\");\n      setMsgType(\"success\");\n      setName(\"\");\n      setSnackBarOpen(true);\n    } catch (e) {\n      if (e.response) {\n        if (e.response.data) {\n          console.log(e.response.data);\n        }\n      }\n\n      setMsg(\"An Error Occured!\");\n      setMsgType(\"error\");\n      setSnackBarOpen(true);\n      setName(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add New Product</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter your name of the product here.\n          </DialogContentText>\n\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Product Name\"\n            type=\"email\"\n            fullWidth\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Product Quantity\"\n            type=\"number\"\n            fullWidth\n            value={quantity}\n            onChange={e => setQuantity(e.target.value)}\n          />\n\n          <TextField\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Product Price\"\n            type=\"number\"\n            fullWidth\n            value={sold}\n            onChange={e => setSold(e.target.value)}\n          />\n\n          <TextField\n            label=\"Product Image\"\n            type=\"file\"\n            fullWidth\n            onChange={e => onChangeFile(e)}\n            inputProps={{\n              accept: \"image/jpg, image/jpeg, image/png\",\n              endadornment: (\n                <InputAdornment position=\"end\">\n                  <PhotoCamera />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={() => createNewProduct()} color=\"primary\">\n            Create New\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nconst SingleProductBox = ({ product, deleteFarm }) => {\n  const classes = useStyles();\n\n  const { pic } = product;\n  const [imgData, setImgData] = React.useState(\"/img/singleProductDefault.jpg\");\n\n  const url = KEYS.API_URL + \"/api/product/stats/\" + product._id;\n  const { data, error, isValidating } = useRequest({\n    url,\n  });\n\n  React.useEffect(() => {\n    if (pic) {\n      //convert image file to base64-encoded string\n      let base64Image = Buffer.from(pic.data, \"binary\").toString(\"base64\");\n\n      //combine all strings\n      let imgSrcString = `data:${pic.contentType};base64,${base64Image}`;\n      setImgData(imgSrcString);\n    }\n  }, [pic]);\n\n  return (\n    <div className=\"responsive\">\n      <div className=\"gallery\">\n        <img src={imgData} alt=\"Cinque Terre\" width=\"600\" height=\"400\" />\n        <div className=\"desc\">\n          <div>\n            <Typography\n              style={{\n                textTransform: \"capitalize\",\n                whiteSpace: \"nowrap\",\n                width: \"100%\",\n                overflow: \"hidden\",\n                fontSize: 12,\n                textOverflow: \"ellipsis\",\n              }}\n            >\n              {product.name}\n            </Typography>\n\n            <div className={classes.my_btns}>\n              <Button\n                className={classes.btn}\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"small\"\n              >\n                open\n              </Button>\n\n              <IconButton\n                edge=\"end\"\n                aria-label=\"delete\"\n                onClick={() => deleteFarm()}\n              >\n                <DeleteIcon style={{ color: \"red\" }} />\n              </IconButton>\n            </div>\n          </div>\n\n          <div className={classes.prodDetails}>\n            {error ? (\n              <>GET error!</>\n            ) : (\n              <>\n                {isValidating ? (\n                  <CircularProgress size={20} />\n                ) : (\n                  <>\n                    {data ? (\n                      <>\n                        <Typography className={classes.items_style}>\n                          <b>Quantity</b>: {data.response.quantity}\n                        </Typography>\n                        <Typography className={classes.items_style}>\n                          <b>Price</b>: {data.response.sold}\n                        </Typography>\n                      </>\n                    ) : null}\n                  </>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import useSWR from \"swr\";\nimport axios from \"axios\";\nimport { useMemo } from \"react\";\n\nexport default function useRequest(request, { initialData, ...config } = {}) {\n  const { data: response, error, isValidating, revalidate, mutate } = useSWR(\n    request && JSON.stringify(request),\n    () => axios(request || {}),\n    {\n      ...config,\n      initialData: initialData && {\n        status: 200,\n        statusText: \"InitialData\",\n        headers: initialData.headers ? { ...initialData.headers } : {},\n        data: initialData,\n      },\n    }\n  );\n\n  return useMemo(\n    () => ({\n      data: response && response.data,\n      response,\n      error,\n      isValidating,\n      revalidate,\n      mutate,\n    }),\n    [response, error, isValidating, revalidate, mutate]\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nconst useStyles = makeStyles((theme) => ({\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nexport default function SimpleSnackbar(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        open={true}\n        autoHideDuration={\n          props.autoHideDuration ? props.autoHideDuration : 6000\n        }\n        onClose={() => props.handleClose()}\n        ContentProps={{\n          \"aria-describedby\": \"message-id\",\n        }}\n        message={<span id=\"message-id\">{props.message}</span>}\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"close\"\n            color=\"inherit\"\n            className={classes.close}\n          >\n            <CloseIcon />\n          </IconButton>,\n        ]}\n      >\n        <Alert onClose={props.handleClose} severity={props.type}>\n          {props.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n"],"sourceRoot":""}