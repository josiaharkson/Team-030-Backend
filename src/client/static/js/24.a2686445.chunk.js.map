{"version":3,"sources":["pages/components/DashboardComponent/farmers.components/HomeComponent.js","../node_modules/@material-ui/core/esm/Divider/Divider.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js"],"names":["checkRole","role","HomeComponent","props","user","email","fullName","dense","primary","secondary","Divider","React","ref","_props$absolute","absolute","classes","className","_props$component","component","Component","_props$flexItem","flexItem","_props$light","light","_props$orientation","orientation","_props$role","undefined","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","root","vertical","withStyles","theme","height","margin","border","flexShrink","backgroundColor","palette","divider","position","bottom","left","width","inset","marginLeft","fade","middle","spacing","marginRight","alignSelf","name","ListItemText","children","_props$disableTypogra","disableTypography","_props$inset","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","ListContext","type","Typography","display","color","multiline","flex","minWidth","marginTop","marginBottom","paddingLeft"],"mappings":"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","file":"static/js/24.a2686445.chunk.js","sourcesContent":["import React from \"react\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nconst checkRole = role => {\n  if (role === \"farm\") return \"Farmer\";\n  if (role === \"cons\") return \"Consumer\";\n  if (role === \"ret\") return \"Retailer\";\n  return \"User\";\n};\n\nfunction HomeComponent(props) {\n  const { email, fullName, role } = props.user;\n\n  return (\n    <>\n      <h3>Welcome {fullName}! </h3>{\" \"}\n      <List dense={true}>\n        <ListItem>\n          <ListItemText primary={\"Full Name\"} secondary={fullName} />\n        </ListItem>\n        <Divider />\n        <ListItem>\n          <ListItemText primary={\"Email\"} secondary={email} />\n        </ListItem>\n\n        <Divider />\n        <ListItem>\n          <ListItemText primary={\"Role\"} secondary={checkRole(role)} />\n        </ListItem>\n        <Divider />\n      </List>\n    </>\n  );\n}\n\nexport default HomeComponent;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      height: 1,\n      margin: 0,\n      // Reset browser default style.\n      border: 'none',\n      flexShrink: 0,\n      backgroundColor: theme.palette.divider\n    },\n\n    /* Styles applied to the root element if `absolute={true}`. */\n    absolute: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `variant=\"inset\"`. */\n    inset: {\n      marginLeft: 72\n    },\n\n    /* Styles applied to the root element if `light={true}`. */\n    light: {\n      backgroundColor: fade(theme.palette.divider, 0.08)\n    },\n\n    /* Styles applied to the root element if `variant=\"middle\"`. */\n    middle: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      height: '100%',\n      width: 1\n    },\n\n    /* Styles applied to the root element if `flexItem={true}`. */\n    flexItem: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  };\n};\nvar Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  var _props$absolute = props.absolute,\n      absolute = _props$absolute === void 0 ? false : _props$absolute,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'hr' : _props$component,\n      _props$flexItem = props.flexItem,\n      flexItem = _props$flexItem === void 0 ? false : _props$flexItem,\n      _props$light = props.light,\n      light = _props$light === void 0 ? false : _props$light,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$role = props.role,\n      role = _props$role === void 0 ? Component !== 'hr' ? 'separator' : undefined : _props$role,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'fullWidth' : _props$variant,\n      other = _objectWithoutProperties(props, [\"absolute\", \"classes\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'fullWidth' && classes[variant], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, orientation === 'vertical' && classes.vertical),\n    role: role,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'inset', 'middle'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);"],"sourceRoot":""}