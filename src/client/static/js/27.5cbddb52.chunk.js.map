{"version":3,"sources":["pages/components/RegisterpageComponent/component/RegComponent.js","../node_modules/@material-ui/core/esm/Slide/Slide.js","../node_modules/@material-ui/core/esm/Container/Container.js"],"names":["TextField","withStyles","root","borderColor","borderBottomColor","MTextField","useStyles","makeStyles","theme","form","width","marginTop","spacing","ConsumerReg","props","classes","onSubmitForm","type","isLoading","reset","setReset","React","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","conPassword","setConPassword","useEffect","component","maxWidth","className","noValidate","onSubmit","e","preventDefault","data","trim","toLowerCase","direction","in","mountOnEnter","unmountOnExit","container","item","xs","sm","color","variant","margin","required","fullWidth","size","label","autoComplete","value","onChange","target","toUpperCase","submit","disabled","to","title","style","setTranslateValue","node","transform","rect","getBoundingClientRect","fakeTransform","computedStyle","window","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","concat","innerWidth","left","innerHeight","top","height","getTranslateValue","webkitTransform","defaultTimeout","enter","duration","enteringScreen","exit","leavingScreen","Slide","ref","children","_props$direction","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","_props$timeout","timeout","_props$TransitionComp","TransitionComponent","Transition","other","_objectWithoutProperties","useTheme","childrenRef","handleOwnRef","instance","current","ReactDOM","handleRefIntermediary","useForkRef","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","handleEnter","reflow","handleEntering","transitionProps","getTransitionProps","mode","webkitTransition","transitions","create","_extends","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","handleResize","debounce","addEventListener","clear","removeEventListener","nodeRef","appear","state","childProps","visibility","Container","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","clsx","capitalize","String","_defineProperty","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","maxWidthSm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name"],"mappings":"iOAWMA,EAAYC,YAAW,CAC3BC,KAAM,CACJ,sBAAuB,CACrBC,YAAa,WAGf,8BAA+B,CAC7BC,kBAAmB,UACnBD,YAAa,WAGf,2BAA4B,CAC1B,aAAc,CACZA,YAAa,WAGf,UAAW,CACTA,YAAa,WAGf,UAAW,CACTA,YAAa,WAGf,mBAAoB,CAClBA,YAAa,WAGf,yBAA0B,CACxBA,YAAa,YAIjB,wBAAyB,CACvBA,YAAa,aAlCDF,CAsCfI,KAEGC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACPC,UAAWH,EAAMI,QAAQ,IAE3BV,KAAM,OA6KOW,UA1KK,SAAAC,GAClB,IAAMC,EAAUT,IAERU,EAAmDF,EAAnDE,aAAcC,EAAqCH,EAArCG,KAAMC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAHnB,EAMOC,IAAMC,SAAS,IANtB,mBAMpBC,EANoB,KAMTC,EANS,OAOKH,IAAMC,SAAS,IAPpB,mBAOpBG,EAPoB,KAOVC,EAPU,OAQDL,IAAMC,SAAS,IARd,mBAQpBK,EARoB,KAQbC,EARa,OASKP,IAAMC,SAAS,IATpB,mBASpBO,EAToB,KASVC,EATU,OAUWT,IAAMC,SAAS,IAV1B,mBAUpBS,EAVoB,KAUPC,EAVO,KAwC3B,OAPAX,IAAMY,WAAU,WACVd,IARJK,EAAa,IACbE,EAAY,IACZE,EAAS,IACTE,EAAY,IACZE,EAAe,IAMbZ,GAAS,MAEV,CAACD,EAAOC,IAGT,kBAAC,IAAD,CAAWc,UAAU,OAAOC,SAAS,MACnC,0BAAMC,UAAWrB,EAAQN,KAAM4B,YAAU,EAACC,SA9B7B,SAAAC,GACfA,EAAEC,iBAEF,IAAMC,EAAO,CACXlB,UAAWA,EAAUmB,OACrBjB,SAAUA,EAASiB,OACnBf,MAAOA,EAAMe,OACbb,SAAUA,EAASa,OACnBX,YAAaA,EAAYW,QAE3B1B,EAAayB,EAAMxB,EAAK0B,iBAqBpB,kBAAC,IAAD,CAAOC,UAAU,KAAKC,IAAI,EAAMC,cAAY,EAACC,eAAa,GACxD,kBAAC,IAAD,CAAMC,WAAS,EAACpC,QAAS,GACvB,kBAAC,IAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACnD,EAAD,CACEoD,MAAM,YACNC,QAAQ,WACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,aACNC,aAAa,QACbC,MAAOrC,EACPsC,SAAU,SAAAtB,GAAC,OAAIf,EAAae,EAAEuB,OAAOF,WAIzC,kBAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACnD,EAAD,CACEoD,MAAM,YACNC,QAAQ,WACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,YACNC,aAAa,QACbC,MAAOnC,EACPoC,SAAU,SAAAtB,GAAC,OAAIb,EAAYa,EAAEuB,OAAOF,WAIxC,kBAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACnD,EAAD,CACEqD,QAAQ,WACRC,OAAO,SACPF,MAAM,YACNG,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLC,MAAM,QACNzC,KAAK,QACL2C,MAAOjC,EACPgC,aAAa,QACbE,SAAU,SAAAtB,GAAC,OAAIX,EAASW,EAAEuB,OAAOF,WAIrC,kBAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACnD,EAAD,CACEqD,QAAQ,WACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLxC,KAAK,WACLyC,MAAM,WACNC,aAAa,WACbP,MAAM,YACNQ,MAAO/B,EACPgC,SAAU,SAAAtB,GAAC,OAAIT,EAAYS,EAAEuB,OAAOF,WAIxC,kBAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,EAAGC,GAAI,GACpB,kBAACnD,EAAD,CACEqD,QAAQ,WACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLL,MAAM,YACNnC,KAAK,WACLyC,MAAM,mBACNC,aAAa,WACbC,MAAO7B,EACP8B,SAAU,SAAAtB,GAAC,OAAIP,EAAeO,EAAEuB,OAAOF,WAI3C,kBAAC,IAAD,CAAMX,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,kBAACnD,EAAD,CACEqD,QAAQ,WACRD,MAAM,YACNE,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,KAAK,QACLxC,KAAK,OACLyC,MAAM,mBACNC,aAAa,WACbC,MAAO3C,EAAK8C,cACZF,SAAU,SAAAtB,QAId,kBAAC,IAAD,CACEtB,KAAK,SACLuC,WAAS,EACTH,QAAQ,YACRD,MAAM,YACNhB,UAAWrB,EAAQiD,OACnBC,SAAU/C,GAETA,EACC,kBAAC,IAAD,CAAkBuC,KAAM,KAExB,4CAAkBxC,IAItB,kBAAC,IAAD,CAAMgC,MAAI,GACR,kBAAC,IAAD,CAAYI,QAAQ,SAClB,kBAAC,IAAD,CACEa,GAAG,SACHC,MAAM,kCACNC,MAAO,CAAEhB,MAAO,qB,iCC1NlC,wFAmDO,SAASiB,EAAkBzB,EAAW0B,GAC3C,IAAIC,EArCN,SAA2B3B,EAAW0B,GACpC,IACIC,EADAC,EAAOF,EAAKG,wBAGhB,GAAIH,EAAKI,cACPH,EAAYD,EAAKI,kBACZ,CACL,IAAIC,EAAgBC,OAAOC,iBAAiBP,GAC5CC,EAAYI,EAAcG,iBAAiB,sBAAwBH,EAAcG,iBAAiB,aAGpG,IAAIC,EAAU,EACVC,EAAU,EAEd,GAAIT,GAA2B,SAAdA,GAA6C,kBAAdA,EAAwB,CACtE,IAAIU,EAAkBV,EAAUW,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAClEH,EAAUI,SAASF,EAAgB,GAAI,IACvCD,EAAUG,SAASF,EAAgB,GAAI,IAGzC,MAAkB,SAAdrC,EACK,cAAcwC,OAAOR,OAAOS,WAAY,mBAAmBD,OAAOL,EAAUP,EAAKc,KAAM,OAG9E,UAAd1C,EACK,eAAewC,OAAOZ,EAAKc,KAAOd,EAAK9D,MAAQqE,EAAS,OAG/C,OAAdnC,EACK,cAAcwC,OAAOR,OAAOW,YAAa,mBAAmBH,OAAOJ,EAAUR,EAAKgB,IAAK,OAIzF,eAAeJ,OAAOZ,EAAKgB,IAAMhB,EAAKiB,OAAST,EAAS,OAI/CU,CAAkB9C,EAAW0B,GAEzCC,IACFD,EAAKF,MAAMuB,gBAAkBpB,EAC7BD,EAAKF,MAAMG,UAAYA,GAG3B,IAAIqB,EAAiB,CACnBC,MAAOC,IAASC,eAChBC,KAAMF,IAASG,eAObC,EAAqB7E,cAAiB,SAAeP,EAAOqF,GAC9D,IAAIC,EAAWtF,EAAMsF,SACjBC,EAAmBvF,EAAM8B,UACzBA,OAAiC,IAArByD,EAA8B,OAASA,EACnDC,EAASxF,EAAM+B,GACf0D,EAAUzF,EAAMyF,QAChBC,EAAY1F,EAAM0F,UAClBC,EAAa3F,EAAM2F,WACnBC,EAAS5F,EAAM4F,OACfC,EAAW7F,EAAM6F,SACjBC,EAAY9F,EAAM8F,UAClBxC,EAAQtD,EAAMsD,MACdyC,EAAiB/F,EAAMgG,QACvBA,OAA6B,IAAnBD,EAA4BjB,EAAiBiB,EACvDE,EAAwBjG,EAAMkG,oBAC9BA,OAAgD,IAA1BD,EAAmCE,IAAaF,EACtEG,EAAQC,YAAyBrG,EAAO,CAAC,WAAY,YAAa,KAAM,UAAW,YAAa,aAAc,SAAU,WAAY,YAAa,QAAS,UAAW,wBAErKN,EAAQ4G,cACRC,EAAchG,SAAa,MAK3BiG,EAAejG,eAAkB,SAAUkG,GAE7CF,EAAYG,QAAUC,cAAqBF,KAC1C,IACCG,EAAwBC,YAAWvB,EAASD,IAAKmB,GACjDM,EAAYD,YAAWD,EAAuBvB,GAE9C0B,EAA+B,SAAsCC,GACvE,OAAO,SAAUC,GACXD,SAEkBE,IAAhBD,EACFD,EAAST,EAAYG,SAErBM,EAAST,EAAYG,QAASO,MAMlCE,EAAcJ,GAA6B,SAAUvD,EAAMyD,GAC7D1D,EAAkBzB,EAAW0B,GAC7B4D,YAAO5D,GAEHiC,GACFA,EAAQjC,EAAMyD,MAGdI,EAAiBN,GAA6B,SAAUvD,EAAMyD,GAChE,IAAIK,EAAkBC,YAAmB,CACvCvB,QAASA,EACT1C,MAAOA,GACN,CACDkE,KAAM,UAERhE,EAAKF,MAAMmE,iBAAmB/H,EAAMgI,YAAYC,OAAO,oBAAqBC,YAAS,GAAIN,EAAiB,CACxGO,OAAQnI,EAAMgI,YAAYG,OAAOC,WAEnCtE,EAAKF,MAAMyE,WAAarI,EAAMgI,YAAYC,OAAO,YAAaC,YAAS,GAAIN,EAAiB,CAC1FO,OAAQnI,EAAMgI,YAAYG,OAAOC,WAEnCtE,EAAKF,MAAMuB,gBAAkB,OAC7BrB,EAAKF,MAAMG,UAAY,OAEnBkC,GACFA,EAAWnC,EAAMyD,MAGjBe,EAAgBjB,EAA6BrB,GAC7CuC,EAAgBlB,EAA6BjB,GAC7CoC,EAAanB,GAA6B,SAAUvD,GACtD,IAAI8D,EAAkBC,YAAmB,CACvCvB,QAASA,EACT1C,MAAOA,GACN,CACDkE,KAAM,SAERhE,EAAKF,MAAMmE,iBAAmB/H,EAAMgI,YAAYC,OAAO,oBAAqBC,YAAS,GAAIN,EAAiB,CACxGO,OAAQnI,EAAMgI,YAAYG,OAAOM,SAEnC3E,EAAKF,MAAMyE,WAAarI,EAAMgI,YAAYC,OAAO,YAAaC,YAAS,GAAIN,EAAiB,CAC1FO,OAAQnI,EAAMgI,YAAYG,OAAOM,SAEnC5E,EAAkBzB,EAAW0B,GAEzBoC,GACFA,EAAOpC,MAGP4E,EAAerB,GAA6B,SAAUvD,GAExDA,EAAKF,MAAMmE,iBAAmB,GAC9BjE,EAAKF,MAAMyE,WAAa,GAEpBlC,GACFA,EAASrC,MAGT6E,EAAiB9H,eAAkB,WACjCgG,EAAYG,SACdnD,EAAkBzB,EAAWyE,EAAYG,WAE1C,CAAC5E,IAyBJ,OAxBAvB,aAAgB,WAEd,IAAIiF,GAAwB,SAAd1D,GAAsC,UAAdA,EAAtC,CAIA,IAAIwG,EAAeC,aAAS,WACtBhC,EAAYG,SACdnD,EAAkBzB,EAAWyE,EAAYG,YAI7C,OADA5C,OAAO0E,iBAAiB,SAAUF,GAC3B,WACLA,EAAaG,QACb3E,OAAO4E,oBAAoB,SAAUJ,OAEtC,CAACxG,EAAW0D,IACfjF,aAAgB,WACTiF,GAGH6C,MAED,CAAC7C,EAAQ6C,IACQ9H,gBAAoB2F,EAAqB0B,YAAS,CACpEe,QAASpC,EACTd,QAAS0B,EACTzB,UAAWsC,EACXrC,WAAY0B,EACZzB,OAAQsC,EACRrC,SAAUuC,EACVtC,UAAWmC,EACXW,QAAQ,EACR7G,GAAIyD,EACJQ,QAASA,GACRI,IAAQ,SAAUyC,EAAOC,GAC1B,OAAoBvI,eAAmB+E,EAAUsC,YAAS,CACxDvC,IAAKyB,EACLxD,MAAOsE,YAAS,CACdmB,WAAsB,WAAVF,GAAuBrD,OAAoB0B,EAAX,UAC3C5D,EAAOgC,EAAStF,MAAMsD,QACxBwF,UAqEQ1D,O,iCC7Rf,6DAqEI4D,EAAyBzI,cAAiB,SAAmBP,EAAOqF,GACtE,IAAIpF,EAAUD,EAAMC,QAChBqB,EAAYtB,EAAMsB,UAClB2H,EAAmBjJ,EAAMoB,UACzB8H,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAwBnJ,EAAMoJ,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAerJ,EAAMsJ,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBvJ,EAAMqB,SACxBA,OAA+B,IAApBkI,EAA6B,KAAOA,EAC/CnD,EAAQC,YAAyBrG,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoBO,gBAAoB2I,EAAWtB,YAAS,CAC1DtG,UAAWkI,YAAKvJ,EAAQb,KAAMkC,EAAWgI,GAASrJ,EAAQqJ,MAAOF,GAAkBnJ,EAAQmJ,gBAA6B,IAAb/H,GAAsBpB,EAAQ,WAAWqE,OAAOmF,YAAWC,OAAOrI,OAC7KgE,IAAKA,GACJe,OAsDUjH,iBAnIK,SAAgBO,GAClC,MAAO,CAELN,KAAMuK,YAAgB,CACpB/J,MAAO,OACPgK,WAAY,OACZC,UAAW,aACXC,YAAa,OACbC,YAAarK,EAAMI,QAAQ,GAC3BkK,aAActK,EAAMI,QAAQ,GAC5BmK,QAAS,SACRvK,EAAMwK,YAAYC,GAAG,MAAO,CAC7BJ,YAAarK,EAAMI,QAAQ,GAC3BkK,aAActK,EAAMI,QAAQ,KAI9BsJ,eAAgB,CACdW,YAAa,EACbC,aAAc,GAIhBV,MAAOc,OAAOC,KAAK3K,EAAMwK,YAAYI,QAAQC,QAAO,SAAUC,EAAKC,GACjE,IAAI3H,EAAQpD,EAAMwK,YAAYI,OAAOG,GAQrC,OANc,IAAV3H,IACF0H,EAAI9K,EAAMwK,YAAYC,GAAGM,IAAe,CACtCpJ,SAAUyB,IAIP0H,IACN,IAGHE,WAAYf,YAAgB,GAAIjK,EAAMwK,YAAYC,GAAG,MAAO,CAC1D9I,SAAUsJ,KAAKC,IAAIlL,EAAMwK,YAAYI,OAAOlI,GAAI,OAIlDyI,WAAYlB,YAAgB,GAAIjK,EAAMwK,YAAYC,GAAG,MAAO,CAC1D9I,SAAU3B,EAAMwK,YAAYI,OAAOjI,KAIrCyI,WAAYnB,YAAgB,GAAIjK,EAAMwK,YAAYC,GAAG,MAAO,CAC1D9I,SAAU3B,EAAMwK,YAAYI,OAAOS,KAIrCC,WAAYrB,YAAgB,GAAIjK,EAAMwK,YAAYC,GAAG,MAAO,CAC1D9I,SAAU3B,EAAMwK,YAAYI,OAAOW,KAIrCC,WAAYvB,YAAgB,GAAIjK,EAAMwK,YAAYC,GAAG,MAAO,CAC1D9I,SAAU3B,EAAMwK,YAAYI,OAAOa,QA0EP,CAChCC,KAAM,gBADOjM,CAEZ6J","file":"static/js/27.5cbddb52.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport MTextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport Link from \"../../../../components/Link\";\nimport Slide from \"@material-ui/core/Slide\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Container from \"@material-ui/core/Container\";\n\nconst TextField = withStyles({\n  root: {\n    \"& label.Mui-focused\": {\n      borderColor: \"#1a941f\",\n      // color: \"white\",\n    },\n    \"& .MuiInput-underline:after\": {\n      borderBottomColor: \"#1a941f\",\n      borderColor: \"#1a941f\",\n      // color: \"white\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#1a941f\",\n        // color: \"white\",\n      },\n      \"& input\": {\n        borderColor: \"#1a941f\",\n        // color: \"white\",\n      },\n      \"& label\": {\n        borderColor: \"#1a941f\",\n        // color: \"white\",\n      },\n      \"&:hover fieldset\": {\n        borderColor: \"#1a941f\",\n        // color: \"white\",\n      },\n      \"&.Mui-focused fieldset\": {\n        borderColor: \"#1a941f\",\n        // color: \"white\",\n      },\n    },\n    \"& .MuiInputLabel-root\": {\n      borderColor: \"#1a941f\",\n      // color: \"white\",\n    },\n  },\n})(MTextField);\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  root: {},\n}));\n\nconst ConsumerReg = props => {\n  const classes = useStyles();\n\n  const { onSubmitForm, type, isLoading, reset, setReset } = props;\n\n  // Form Fields\n  const [firstName, setFirstName] = React.useState(\"\");\n  const [lastName, setLastName] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [conPassword, setConPassword] = React.useState(\"\");\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const data = {\n      firstName: firstName.trim(),\n      lastName: lastName.trim(),\n      email: email.trim(),\n      password: password.trim(),\n      conPassword: conPassword.trim(),\n    };\n    onSubmitForm(data, type.toLowerCase());\n  };\n\n  const onReset = () => {\n    setFirstName(\"\");\n    setLastName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setConPassword(\"\");\n  };\n\n  React.useEffect(() => {\n    if (reset) {\n      onReset();\n      setReset(false);\n    }\n  }, [reset, setReset]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <form className={classes.form} noValidate onSubmit={onSubmit}>\n        <Slide direction=\"up\" in={true} mountOnEnter unmountOnExit>\n          <Grid container spacing={1}>\n            <Grid item xs={6} sm={6}>\n              <TextField\n                color=\"secondary\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                size=\"small\"\n                label=\"First Name\"\n                autoComplete=\"fname\"\n                value={firstName}\n                onChange={e => setFirstName(e.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={6} sm={6}>\n              <TextField\n                color=\"secondary\"\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                size=\"small\"\n                label=\"Last Name\"\n                autoComplete=\"lname\"\n                value={lastName}\n                onChange={e => setLastName(e.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                color=\"secondary\"\n                required\n                fullWidth\n                size=\"small\"\n                label=\"Email\"\n                type=\"email\"\n                value={email}\n                autoComplete=\"email\"\n                onChange={e => setEmail(e.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                size=\"small\"\n                type=\"password\"\n                label=\"Password\"\n                autoComplete=\"Password\"\n                color=\"secondary\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={6} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                size=\"small\"\n                color=\"secondary\"\n                type=\"password\"\n                label=\"Confirm Password\"\n                autoComplete=\"Password\"\n                value={conPassword}\n                onChange={e => setConPassword(e.target.value)}\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                variant=\"outlined\"\n                color=\"secondary\"\n                margin=\"normal\"\n                required\n                fullWidth\n                size=\"small\"\n                type=\"text\"\n                label=\"Select User Type\"\n                autoComplete=\"Password\"\n                value={type.toUpperCase()}\n                onChange={e => {}}\n              />\n            </Grid>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.submit}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <CircularProgress size={24} />\n              ) : (\n                <span> Signup as {type}</span>\n              )}\n            </Button>\n\n            <Grid item>\n              <Typography variant=\"body2\">\n                <Link\n                  to=\"/login\"\n                  title=\"Already? have an account? Login\"\n                  style={{ color: \"#556cd6\" }}\n                />\n              </Typography>\n            </Grid>\n          </Grid>\n        </Slide>\n      </form>\n    </Container>\n  );\n};\n\nexport default ConsumerReg;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport debounce from '../utils/debounce';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = window.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return \"translateX(\".concat(window.innerWidth, \"px) translateX(\").concat(offsetX - rect.left, \"px)\");\n  }\n\n  if (direction === 'right') {\n    return \"translateX(-\".concat(rect.left + rect.width - offsetX, \"px)\");\n  }\n\n  if (direction === 'up') {\n    return \"translateY(\".concat(window.innerHeight, \"px) translateY(\").concat(offsetY - rect.top, \"px)\");\n  } // direction === 'down'\n\n\n  return \"translateY(-\".concat(rect.top + rect.height - offsetY, \"px)\");\n}\n\nexport function setTranslateValue(direction, node) {\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nvar Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props.in,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? defaultTimeout : _props$timeout,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Transition : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  var theme = useTheme();\n  var childrenRef = React.useRef(null);\n  /**\n   * used in cloneElement(children, { ref: handleRef })\n   */\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    childrenRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRefIntermediary = useForkRef(children.ref, handleOwnRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var normalizedTransitionCallback = function normalizedTransitionCallback(callback) {\n    return function (isAppearing) {\n      if (callback) {\n        // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n        if (isAppearing === undefined) {\n          callback(childrenRef.current);\n        } else {\n          callback(childrenRef.current, isAppearing);\n        }\n      }\n    };\n  };\n\n  var handleEnter = normalizedTransitionCallback(function (node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  var handleEntering = normalizedTransitionCallback(function (node, isAppearing) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  var handleEntered = normalizedTransitionCallback(onEntered);\n  var handleExiting = normalizedTransitionCallback(onExiting);\n  var handleExit = normalizedTransitionCallback(function (node) {\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      style: style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  var handleExited = normalizedTransitionCallback(function (node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  var updatePosition = React.useCallback(function () {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    window.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],"sourceRoot":""}